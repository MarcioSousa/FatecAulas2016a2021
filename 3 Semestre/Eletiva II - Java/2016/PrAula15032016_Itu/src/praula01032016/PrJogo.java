/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package praula01032016;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Abutua
 */
public class PrJogo extends javax.swing.JFrame 
                    implements Runnable
        {
    private boolean setaUp=false; 
    private boolean setaDown=false;
    private boolean setaLeft=false;
    private boolean setaRight=false;
    
    

    /**
     * Creates new form PrJogo
     */
    public PrJogo() {
        initComponents();
        createBufferStrategy(2);
        Thread t = new Thread(this);
        t.start();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if(evt.getKeyCode() ==  KeyEvent.VK_UP)  
            setaUp = true;
        else
        if(evt.getKeyCode() ==  KeyEvent.VK_DOWN)
            setaDown = true;
        else
        if(evt.getKeyCode() ==  KeyEvent.VK_LEFT)
            setaLeft = true;
        else
        if(evt.getKeyCode() ==  KeyEvent.VK_RIGHT)
            setaRight = true;
        
    }//GEN-LAST:event_formKeyPressed

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
         if(evt.getKeyCode() ==  KeyEvent.VK_UP)  
            setaUp = false;
        
        if(evt.getKeyCode() ==  KeyEvent.VK_DOWN)
            setaDown = false;
        
        if(evt.getKeyCode() ==  KeyEvent.VK_LEFT)
            setaLeft = false;
        
        if(evt.getKeyCode() ==  KeyEvent.VK_RIGHT)
            setaRight = false;
    }//GEN-LAST:event_formKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrJogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrJogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrJogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrJogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PrJogo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        Graphics g;
        
        ArrayList <Elemento> elementos = new ArrayList();
        
        for(int i = 0; i < 5; i++)
        {
           Bola b1 = new Bola();
           b1.setCor(Color.BLUE);
           int x = (int) (Math.random()*getWidth());
           int y = (int) (Math.random()*getHeight());
           b1.setX(x);
           b1.setY(y);
           elementos.add(b1);
        }
        
        
        Quadrado q = new Quadrado();
        q.setCor(Color.BLACK);
        elementos.add(q);

        
        
        while(true)
        {
            g = getBufferStrategy().getDrawGraphics();
            g.setColor(Color.GREEN);
            g.fillRect(0,0,getWidth(), getHeight());
            
            if(setaUp)
                q.setIncY(-1);
            else
                if(setaDown)
                   q.setIncY(1);
                else
                    q.setIncY(0);
            
            if(setaLeft)
                q.setIncX(-1);
            else
                if(setaRight)
                   q.setIncX(1);
                else
                    q.setIncX(0);
            
            
            for(Elemento e : elementos)
               e.trataColisaoComJanela(getWidth(), getHeight());
            
            
            for(Elemento e: elementos)
                e.desenhar(g);
           
            
            for(Elemento e: elementos)
                e.mover();
            
            
            q.setCor(Color.BLACK);
            for(Elemento aux: elementos)
            {
                if(q.colisaoComElemento(aux))
                {
                    q.setCor(Color.CYAN);
                    if(aux instanceof Bola)
                       ((Bola)aux).aumentaTamanho();
                    
                }
                else
                {
                     if(aux instanceof Bola)
                       ((Bola)aux).setCresce(true);
                }
                
            }
            
           
            
            
            
            
            
            
            
            g.dispose();
            getBufferStrategy().show();
            
            try {
                Thread.sleep(10);
            } catch (InterruptedException ex) {
                Logger.getLogger(PrJogo.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
    }
}
